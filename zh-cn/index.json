[{"categories":["System"],"content":"EMQX介面导览与简易MQTT通讯实作","date":"2023-11-27","objectID":"/zh-cn/theme-document-docker-emqx/","tags":["System","IoT","Docker"],"title":"高性能物联网MQTT Broker - EMQX","uri":"/zh-cn/theme-document-docker-emqx/"},{"categories":["System"],"content":"前言 提到MQTT协定，大多数人第一个想到的场景应该是在物联网的通讯之中，其中原因在于MQTT相比网页上使用的HTTP协定来的更简便，传输的封包讯息也更小。非常适用于在有限频宽和计算资源的状况下收发资料。 至于MQTT具体协议是在做什么 就让我们看下方的图来说明 协定说明\r从图中我们可以看到 正中间有一个类似MQTT大脑的地方，一般称之为MQTT Broker， 这里会将左边的讯息发布(Publish) 转送到右边的订阅者(Subscribe)手上。这样就完成了一次消息的传递。 问题: 那么我们怎么确认发布与通讯可以正确传递，但又不会拿到其他的杂讯? 从图中可以看到各个项目连接的地方有一些类似路径的东西，这个是所谓的主题(Topic)，发布与订阅在同一个主题才能接收到讯息。 如果想取得多个主题可以在路径中设置# 来进行多主题读取，但需要注意/代表分层且第一层开头没有/ ","date":"2023-11-27","objectID":"/zh-cn/theme-document-docker-emqx/:1:0","tags":["System","IoT","Docker"],"title":"高性能物联网MQTT Broker - EMQX","uri":"/zh-cn/theme-document-docker-emqx/"},{"categories":["System"],"content":"与相似产品Mosquito的差异 老牌的Mosquito对于有研究IoT的爱好者来说，想必不陌生，其简单的安装方式。让使用者可以快速体验MQTT协议的各个组件如何设置。 但相较之下有以下几个理由令我觉得使用EMQX也不失为一个好选择。 短时间可以处理更多的消息传递 直接有GUI画面可以进行浏览和额外设置 内部可以将数据倒出Prometheus(时序性资料库)进行存储 如果需要使用在微务架构上，也有提供相应的安装方式 EMQX vs Mosquitto 官网详细说明 ","date":"2023-11-27","objectID":"/zh-cn/theme-document-docker-emqx/:2:0","tags":["System","IoT","Docker"],"title":"高性能物联网MQTT Broker - EMQX","uri":"/zh-cn/theme-document-docker-emqx/"},{"categories":["System"],"content":"开始之前 在正式进入我们今日主题之前，会需要使用以下两项工具来演示 Docker MQTTX 信息\r如果缺少Docker环境可以看这篇私有环境网站监控系统建置- Uptime-kuma中的安装前置需求!!\r","date":"2023-11-27","objectID":"/zh-cn/theme-document-docker-emqx/:3:0","tags":["System","IoT","Docker"],"title":"高性能物联网MQTT Broker - EMQX","uri":"/zh-cn/theme-document-docker-emqx/"},{"categories":["System"],"content":"Docker启动EMQX 安装好Docker之后输入以下指令 docker run -d --name emqx \\ -p 1883:1883 -p 8083:8083 \\ -p 8084:8084 -p 8883:8883 \\ -p 18083:18083 \\ -v $PWD/data:/opt/emqx/data \\ -v $PWD/log:/opt/emqx/log \\ emqx/emqx:5.3.1 参数说明\r-d : 背景运行 -p : 端口mapping(前者是电脑本的port 后者是容器内部的port) -v : 目录挂载进行永久化存储($PWD = 电脑当前目录) 1883 : MQTT标准通信Port 8083 : WebSocket 8084 : 具有SSL 的 WebSocket 8883 : 具有SSL 的 MQTT 18083 : Web UI 本地环境如果没有EMQX的image，Docker run 会自动到Docker Hub 上去下载，看到如右侧的指令跑完，在浏览器上输入http://lcoalhost:18083即可进入Login Page 默认登入资讯\rUsername : admin Password : public 第一次登系统会提示修改密码 ","date":"2023-11-27","objectID":"/zh-cn/theme-document-docker-emqx/:4:0","tags":["System","IoT","Docker"],"title":"高性能物联网MQTT Broker - EMQX","uri":"/zh-cn/theme-document-docker-emqx/"},{"categories":["System"],"content":"功能探索 ","date":"2023-11-27","objectID":"/zh-cn/theme-document-docker-emqx/:5:0","tags":["System","IoT","Docker"],"title":"高性能物联网MQTT Broker - EMQX","uri":"/zh-cn/theme-document-docker-emqx/"},{"categories":["System"],"content":"系统资讯概览 进入首页后预设简体中文，可以透过右上角齿轮选择语言 和黑/白模式 红框中的内容可以看到系统的资讯概览，例如:系统资源、MQTT订阅数量、目前有多少Topic ","date":"2023-11-27","objectID":"/zh-cn/theme-document-docker-emqx/:5:1","tags":["System","IoT","Docker"],"title":"高性能物联网MQTT Broker - EMQX","uri":"/zh-cn/theme-document-docker-emqx/"},{"categories":["System"],"content":"建立一个User 建立用户资料库 可以看到用户资料库已经建立，点选User 进入里面新增之后要用的Username 新的user没有帐号复杂度限制 至此已经建立了连线的必备资讯，我们可以开始透过连线来使用EMQX了 ","date":"2023-11-27","objectID":"/zh-cn/theme-document-docker-emqx/:5:2","tags":["System","IoT","Docker"],"title":"高性能物联网MQTT Broker - EMQX","uri":"/zh-cn/theme-document-docker-emqx/"},{"categories":["System"],"content":"MQTT连线测试 点选新连线输入以下资讯 HOST : MQTT + 连线IP(本机用localhost) Port : 1883 Username : 上一小节设定的帐号 Password : 上一小节设定的密码 设定好连线后需要先设定订阅主题 后续才能收到发布 订阅主题 -\u003e topic/# 发布主题 -\u003e topic/123、topic/456 图片中的红线代表着分别是哪一方产生的回应(订阅、发布) 图片中发布讯息框上面有一个写者 topic/456 的栏位 更改这里可以发布不同主题 ","date":"2023-11-27","objectID":"/zh-cn/theme-document-docker-emqx/:6:0","tags":["System","IoT","Docker"],"title":"高性能物联网MQTT Broker - EMQX","uri":"/zh-cn/theme-document-docker-emqx/"},{"categories":["System"],"content":"WebSocket 连线设定 接下来我们可以透过同一个页面的下方发布和订阅消息，但如果消息订阅主题错误，会产生有送出但没收到的状况 ","date":"2023-11-27","objectID":"/zh-cn/theme-document-docker-emqx/:7:0","tags":["System","IoT","Docker"],"title":"高性能物联网MQTT Broker - EMQX","uri":"/zh-cn/theme-document-docker-emqx/"},{"categories":["System"],"content":"图表检视 回到首页可以看见刚才进行连线的资讯已经整理成时序性图表呈现 Incoming Messages 指的是发布传入MQTT Broker的数量 Outgoing Messages 指的是传入订阅的数量 ","date":"2023-11-27","objectID":"/zh-cn/theme-document-docker-emqx/:8:0","tags":["System","IoT","Docker"],"title":"高性能物联网MQTT Broker - EMQX","uri":"/zh-cn/theme-document-docker-emqx/"},{"categories":["System"],"content":"结语 相信上述的操作能让读者对EMQX有更进一步的认识，对于现在的环境来说，具有足够好的扩展能力对于将MQTT协议带入现实能力式不可少的。而这部分在此工具都有相应的满足需求。且操作下来只要有了解MQTT组件间的传递就很容易上手。 当然这些只是入门，后续还会有更进阶的操作可以发掘，比如使用中间件进行数据转换，与资料库整合、设置黑名单等等功能 就留给各位去探索了 ","date":"2023-11-27","objectID":"/zh-cn/theme-document-docker-emqx/:9:0","tags":["System","IoT","Docker"],"title":"高性能物联网MQTT Broker - EMQX","uri":"/zh-cn/theme-document-docker-emqx/"},{"categories":["System"],"content":"UptimeRobot 从注册到设定step-by-step","date":"2023-11-20","objectID":"/zh-cn/theme-document-sass-uptime-robot/","tags":["Sass","System","App"],"title":"免费线上网页监控服务 - UptimeRobot","uri":"/zh-cn/theme-document-sass-uptime-robot/"},{"categories":["System"],"content":"前言 此篇文章为接续上篇 私有环境网站监控系统建置 - Uptime-kuma 之后续内容 两者区别在于如果需要监控的服务已经可以透过浏览器连上 且不打算自己在本地架设监控系统的状况下 就有UptimeRobot的用武之地了!! ","date":"2023-11-20","objectID":"/zh-cn/theme-document-sass-uptime-robot/:1:0","tags":["Sass","System","App"],"title":"免费线上网页监控服务 - UptimeRobot","uri":"/zh-cn/theme-document-sass-uptime-robot/"},{"categories":["System"],"content":"免费版限制 下图是从官方网站上的封面取得，在免费的使用条件下可以设置50个监控目标，每5分钟进行一次检查 ","date":"2023-11-20","objectID":"/zh-cn/theme-document-sass-uptime-robot/:2:0","tags":["Sass","System","App"],"title":"免费线上网页监控服务 - UptimeRobot","uri":"/zh-cn/theme-document-sass-uptime-robot/"},{"categories":["System"],"content":"注册步骤 官网注册连结 输入注册资讯 到信箱启用帐户 ","date":"2023-11-20","objectID":"/zh-cn/theme-document-sass-uptime-robot/:3:0","tags":["Sass","System","App"],"title":"免费线上网页监控服务 - UptimeRobot","uri":"/zh-cn/theme-document-sass-uptime-robot/"},{"categories":["System"],"content":"新增监控目标 警告\r后续设定中看到有 PAID 都是需要升级才能享有的权益\r信箱跳转到首页UptimeRobot首页 可以看到有手机版可以下载(不用随时随地都带着电脑了XD) 接着点选+Add New Monitor 选择监控类型 进行设定以部落格存活状况为例 (详细设定说明可展开info区块) 信息\rURL(IP) 暴露在公网可以连线的IP Monitoring Interval : 检查的间隔 可以大于5分钟 但不能小于(要升级) Monitor Timeout : 检查当下多久没回应判定异常 ","date":"2023-11-20","objectID":"/zh-cn/theme-document-sass-uptime-robot/:4:0","tags":["Sass","System","App"],"title":"免费线上网页监控服务 - UptimeRobot","uri":"/zh-cn/theme-document-sass-uptime-robot/"},{"categories":["System"],"content":"测试与结果 设定完成可以透过测试来检查设定是否正确 回到信箱查看 服务正常，但时区异常 更改时区设定 (测试后信件时区正常，仪表板仍为UTC+0) ","date":"2023-11-20","objectID":"/zh-cn/theme-document-sass-uptime-robot/:5:0","tags":["Sass","System","App"],"title":"免费线上网页监控服务 - UptimeRobot","uri":"/zh-cn/theme-document-sass-uptime-robot/"},{"categories":["System"],"content":"结论 与自建服务版本相比缺少一些常用功能 比如以下 没有SSL凭证到期检测 通知系统预设Email 其他需要额外设定且台湾常用的Line无法支援 但既然是免费的 有一些功能缺少也在合理范围内。使用上就需要依场景区选择是否使用这项工具! 另外附上升级前后的权益差别供各位读者参考 UptimeRobot-Pricing ","date":"2023-11-20","objectID":"/zh-cn/theme-document-sass-uptime-robot/:6:0","tags":["Sass","System","App"],"title":"免费线上网页监控服务 - UptimeRobot","uri":"/zh-cn/theme-document-sass-uptime-robot/"},{"categories":["System"],"content":"同场加映 手机APP画面浏览 下载手机APP后可以透过手机 来及时间了解网站状况 且会多出一个手机通知选项(需要在Alert中打开) 给各位看一下手机版的版面来当作本文的结尾 ","date":"2023-11-20","objectID":"/zh-cn/theme-document-sass-uptime-robot/:7:0","tags":["Sass","System","App"],"title":"免费线上网页监控服务 - UptimeRobot","uri":"/zh-cn/theme-document-sass-uptime-robot/"},{"categories":["System"],"content":"透过Docker快速建置网站监控工具与告警系统","date":"2023-11-12","objectID":"/zh-cn/theme-document-docker-uptime_kuma/","tags":["Docker","Line","System"],"title":"私有环境网站监控系统建置 - Uptime-kuma","uri":"/zh-cn/theme-document-docker-uptime_kuma/"},{"categories":["System"],"content":"为什么需要网站监控工具 在一般有部署网站的环境中，最重要的就是知道现在网站提供的服务有没有挂掉或是凭证有没有到期 而这些事情在过去都是透过编写脚本或程式来进行监控，对于没有技术背景的使用者来说，异常麻烦。尤其是监控写好了 还要能在出状况时进行通知 无疑是让合理的监控变得更麻烦 秉持着 复杂的事情先上网找现成工具没有再靠自己的想法。所以就有了今天的主角 Uptime-kuma 信息\r如果想在安装前先体验线上版介面和进行基础的设定可以参考下方连结 Demo 网站连结 10 分钟可用版 那么 我们就开始安装在自己环境中来体验无期限使用的效果吧 安装前置需求\r需要一台有Docker 的环境 (安装方法如下) Windows 以管理员身份运行 PowerShell 或 Windows 命令提示符 安装WSL 然后重启电脑 wsl --install 下载Docker Desktop Ubuntu 复制贴上在Terminal 即可 sudo apt-get update sudo apt-get install \\ ca-certificates \\ curl \\ gnupg \\ lsb-release sudo mkdir -m 0755 -p /etc/apt/keyrings curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg echo \\ \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list \u003e /dev/null sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y sudo gpasswd -a $USER docker newgrp docker ","date":"2023-11-12","objectID":"/zh-cn/theme-document-docker-uptime_kuma/:1:0","tags":["Docker","Line","System"],"title":"私有环境网站监控系统建置 - Uptime-kuma","uri":"/zh-cn/theme-document-docker-uptime_kuma/"},{"categories":["System"],"content":"Uptime-kuma安装 进入Power Shell / Terminal 输入以下指令 docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1 指令说明\r-d 会让容器在背景运行 -restart 开机启动docker自动启动监控 -p 内部的网路端口对应到外部(主机)的端口号 -v 资料储存位置 本机的当前目录新增uptime-kuma资料夹 同步容器的app/data 目录 ","date":"2023-11-12","objectID":"/zh-cn/theme-document-docker-uptime_kuma/:2:0","tags":["Docker","Line","System"],"title":"私有环境网站监控系统建置 - Uptime-kuma","uri":"/zh-cn/theme-document-docker-uptime_kuma/"},{"categories":["System"],"content":"连线UI介面 打开浏览器输入 如果想在安装前先体验线上版介面和进行基础的设定可以参考下方连结 http://localhost:3001 如果Ubuntu没有装桌面的话 可以参考以下方法 ufw allow 3001 #打开对外防火墙 ip -a #找出当前主机的ip 再用外部连线进入 ","date":"2023-11-12","objectID":"/zh-cn/theme-document-docker-uptime_kuma/:2:1","tags":["Docker","Line","System"],"title":"私有环境网站监控系统建置 - Uptime-kuma","uri":"/zh-cn/theme-document-docker-uptime_kuma/"},{"categories":["System"],"content":"UI设定 进入UI需要设定帐号密码 从最简单的网页监测开始 输入要监控的网址 如果有进阶需求 如查看凭证剩余天数也可以勾选 ","date":"2023-11-12","objectID":"/zh-cn/theme-document-docker-uptime_kuma/:3:0","tags":["Docker","Line","System"],"title":"私有环境网站监控系统建置 - Uptime-kuma","uri":"/zh-cn/theme-document-docker-uptime_kuma/"},{"categories":["System"],"content":"告警系统 Line Notify 设定 可以设定不只一个通知 看到需要token 且下方有教学如何从哪里取的 点选下方红框中的网址 点选右上角 可选择用帐号还是qrcode登入 可选择notify如何发送通知可以是指针对本人或是在群组中发出 测试先用1对1看效果 登入后滑到最下方 点选发行权杖 取得token回填网页即可 ","date":"2023-11-12","objectID":"/zh-cn/theme-document-docker-uptime_kuma/:4:0","tags":["Docker","Line","System"],"title":"私有环境网站监控系统建置 - Uptime-kuma","uri":"/zh-cn/theme-document-docker-uptime_kuma/"},{"categories":["System"],"content":"模拟监控失败范例 Ping 的设定档如下 ping的类型和 模拟一个不存在的网址 再配上通知设定 ","date":"2023-11-12","objectID":"/zh-cn/theme-document-docker-uptime_kuma/:5:0","tags":["Docker","Line","System"],"title":"私有环境网站监控系统建置 - Uptime-kuma","uri":"/zh-cn/theme-document-docker-uptime_kuma/"},{"categories":["System"],"content":"结果 可以看到网站的回应时间平均在0.2秒，回应率正常且凭证在58天后到期 如果失败会发出讯息 ","date":"2023-11-12","objectID":"/zh-cn/theme-document-docker-uptime_kuma/:6:0","tags":["Docker","Line","System"],"title":"私有环境网站监控系统建置 - Uptime-kuma","uri":"/zh-cn/theme-document-docker-uptime_kuma/"},{"categories":["System"],"content":"参考资料 官方Github ","date":"2023-11-12","objectID":"/zh-cn/theme-document-docker-uptime_kuma/:7:0","tags":["Docker","Line","System"],"title":"私有环境网站监控系统建置 - Uptime-kuma","uri":"/zh-cn/theme-document-docker-uptime_kuma/"},{"categories":[],"content":"关于作者 💊💻 生物学系毕业后意外转职资讯业 🚩 立志成为能优化架构也能独立开发的软体工程师 🚀 专注于学习新技术，落实于解决实际问题 ❤️ 爱好美食、追剧以及哲学 ","date":"2023-11-01","objectID":"/zh-cn/about/:1:0","tags":[],"title":"关于","uri":"/zh-cn/about/"},{"categories":[],"content":"关于部落格 建立部落格动机: 作者的工作与电脑领域相关，持续学习新技术的同时、也致力于巩固已有的知识以应对日益复杂的技术挑战。 透过撰写文章，我记录了自己的成长过程， 并希望能够为每位访问网站的用户提供有用的内容。 对我来说，如果我的文章能对您有所帮助将是一项极大的荣幸! ","date":"2023-11-01","objectID":"/zh-cn/about/:2:0","tags":[],"title":"关于","uri":"/zh-cn/about/"},{"categories":[],"content":"经历","date":"2023-11-01","objectID":"/zh-cn/about/:3:0","tags":[],"title":"关于","uri":"/zh-cn/about/"}]